//题目描述

//输入一棵二叉搜索树，将该二叉搜索树转换成一个排序的双向链表。要求不能创建任何新的结点，只能调整树中结点指针的指向。
/*
struct TreeNode {
	int val;
	struct TreeNode *left;
	struct TreeNode *right;
	TreeNode(int x) :
			val(x), left(NULL), right(NULL) {
	}
};*/
class Solution {
public:
    TreeNode* Convert(TreeNode* pRootOfTree)
    {
        if(pRootOfTree == NULL)
            return NULL;
        if(pRootOfTree->left == NULL && pRootOfTree->right == NULL)
            return pRootOfTree;
 
        TreeNode* left = Convert(pRootOfTree->left);
        TreeNode* p = left;
        while(p !=NULL && p->right != NULL)
            p = p->right;
 
        if(left != NULL)
        {
            p->right = pRootOfTree;
            pRootOfTree->left = p;
        }
 
        TreeNode* right = Convert(pRootOfTree->right);
 
        if(right != NULL)
        {
            pRootOfTree->right = right;
            right->left = pRootOfTree;
        }
 
        return left!=NULL? left:pRootOfTree;
    }
};
