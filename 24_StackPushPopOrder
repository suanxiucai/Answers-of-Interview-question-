//题目描述

//输入两个整数序列，第一个序列表示栈的压入顺序，请判断第二个序列是否为该栈的弹出顺序。假设压入栈的所有数字均不相等。
//例如序列1,2,3,4,5是某栈的压入顺序，序列4，5,3,2,1是该压栈序列对应的一个弹出序列，
//但4,3,5,1,2就不可能是该压栈序列的弹出序列。
class Solution {
public:
    bool IsPopOrder(vector<int> pushV,vector<int> popV) {
        	stack<int>s;
       
        if (pushV.empty() && popV.empty())
			return false;
		else if (pushV.empty() && !popV.empty())
			return false;
		else if (!pushV.empty() && popV.empty())
			return true;
		
         else {
			auto ptr1 = pushV.begin();
			auto ptr2 = popV.begin();
			for (ptr2;ptr2!=popV.end();) {
				if(s.empty())//第一次压入时
      				s.push(*ptr1);
				else {
					if (s.top() != (*ptr2)) {
						ptr1++;
						s.push(*ptr1);
					}
					else {
						s.pop();
						ptr2++;
					}
				}
				
			}
		}
		return s.empty();
        
    }
};
